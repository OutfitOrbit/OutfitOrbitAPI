openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "Outfit Orbit API documentation"
  description: "Outfit Orbit API documentation using OpenAPI and Swagger UI"
components:
  securitySchemes:
    oAuthSample: # <---- arbitrary name
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        implicit: # <---- OAuth flow(authorizationCode, implicit, password or clientCredentials)
          authorizationUrl: https://api.example.com/oauth2/authorize
          scopes:
            read_pets: read your pets
            write_pets: modify pets in your account
security:
  - oAuthSample:
      - write_pets
      - read_pets
paths:
  /home/explore:
    $ref: "./home.yaml#/paths/~1explore"
  /home/popular:
    $ref: "./home.yaml#/paths/~1popular"
  /home/follow:
    $ref: "./home.yaml#/paths/~1follow"

  /search/history:
    get:
      summary: "Get the recent searches made by a user"
      parameters:
        - in: query
          name: user-id
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /search/hot:
    get:
      summary: "Get the recent hot searches"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /search:
    get:
      summary: "search posts / topics / products / users"
      parameters:
        - in: query
          name: search-text
          schema:
            type: string
        - in: query
          name: search-type
          schema:
            type: string
            enum:
              - posts
              - topics
              - products
              - users
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: "./components/postTile.yaml"
                  - type: array
                    items:
                      $ref: "./components/user.yaml"
                  - type: array
                    items:
                      $ref: "./components/productGeneral.yaml"

  /carts:
    $ref: "./carts.yaml#/paths/~1carts"
  /carts/add:
    $ref: "./carts.yaml#/paths/~1carts~1add"
  /carts/delete:
    $ref: "./carts.yaml#/paths/~1carts~1delete"
  /carts/edit:
    $ref: "./carts.yaml#/paths/~1carts~1edit"

  /posts:
    $ref: "./posts.yaml#/paths/~1posts"
  /posts/{id}:
    $ref: "./posts.yaml#/paths/~1posts~1{id}"
  /posts/{id}/likes:
    $ref: "./posts.yaml#/paths/~1posts~1{id}~1likes"
  /posts/{id}/comments:
    $ref: "./posts.yaml#/paths/~1posts~1{id}~1comments"
  /posts/{id}/saves:
    $ref: "./posts.yaml#/paths/~1posts~1{id}~1saves"

  /products:
    $ref: "./products.yaml#/paths/~1products"
  /products/{id}:
    $ref: "./products.yaml#/paths/~1products~1{id}"
  /products/{id}/variant:
    $ref: "./products.yaml#/paths/~1products~1{id}~1variant"

  /topics:
    $ref: "./topics.yaml#/paths/~1topics"
  /topics/{id}:
    $ref: "./topics.yaml#/paths/~1topics~1{id}"

  /users/{id}:
    $ref: "./users.yaml#/paths/~1users~1{id}"
  /users/{id}/following-num:
    $ref: "./users.yaml#/paths/~1users~1{id}~1following-num"
  /users/{id}/followers-num:
    $ref: "./users.yaml#/paths/~1users~1{id}~1followers-num"
  /users/{id}/following:
    $ref: "./users.yaml#/paths/~1users~1{id}~1following"
  /users/{id}/followers:
    $ref: "./users.yaml#/paths/~1users~1{id}~1followers"
  /users/{id}/posts:
    $ref: "./users.yaml#/paths/~1users~1{id}~1posts"
  /users/{id}/favorites:
    $ref: "./users.yaml#/paths/~1users~1{id}~1favorites"
  /users/{id}/likes:
    $ref: "./users.yaml#/paths/~1users~1{id}~1likes"
  /users/{id}/view-history:
    $ref: "./users.yaml#/paths/~1users~1{id}~1view-history"
  /users/{id}/products:
    $ref: "./users.yaml#/paths/~1users~1{id}~1products"
  /users/{id}/follows:
    $ref: "./users.yaml#/paths/~1users~1{id}~1follows"
  /users/{id}/recently-visited:
    $ref: "./users.yaml#/paths/~1users~1{id}~1recently-visited"
  /orders:
    $ref: "./orders.yaml#/paths/~1orders"
  /orders/{id}:
    $ref: "./orders.yaml#/paths/~1orders~1{id}"
  /orders/{id}/status:
    $ref: "./orders.yaml#/paths/~1orders~1{id}~1status"
  /myshop/{id}/orders:
    $ref: "./shopAdmin.yaml#/paths/~1myshop~1{id}~1orders"
  /myshop/{id}/orders/fulfilled:
    $ref: "./shopAdmin.yaml#/paths/~1myshop~1{id}~1orders~1fulfilled"
  /myshop/{id}/orders/unfulfilled:
    $ref: "./shopAdmin.yaml#/paths/~1myshop~1{id}~1orders~1unfulfilled"
  /myshop/{id}/orders/return:
    $ref: "./shopAdmin.yaml#/paths/~1myshop~1{id}~1orders~1return"
  /myshop/{id}/product:
    $ref: "./shopAdmin.yaml#/paths/~1myshop~1{id}~1products"
  /myshop/{id}/analytics:
    $ref: "./shopAdmin.yaml#/paths/~1myshop~1{id}~1analytics"
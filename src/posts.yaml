openapi: "3.0.0"
info:
  version: "0.0.1"
  title: "Outfit Orbit API documentation for Home page"
  description: "Outfit Orbit API documentation using OpenAPI and Swagger UI"
paths:
  /posts:
    post:
      summary: "Create a new post"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type: 
                  type: string
                  enum: 
                    - pic
                    - vid
                thumbnail: 
                  type: string
                user_id: 
                  type: string
                title: 
                  type: string
                text: 
                  type: string
                time: 
                  type: string
                media: 
                  oneOf:
                    - type: string
                    - type: array
                      items: 
                        $ref: './components/taggedPostImage.yaml'
                product_ids:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  post_id:
                    type: string
  /posts/{id}:
    get:
      summary: "get a post content"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: './components/post.yaml'
    put:
      summary: "update a post content"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                thumbnail: 
                  type: string
                title: 
                  type: string
                text: 
                  type: string
                time: 
                  type: string
                media: 
                  oneOf:
                    - type: string
                    - type: array
                      items: 
                        $ref: './components/taggedPostImage.yaml'
                product_ids:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: "OK"
    delete:
      summary: "delete a post"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
      responses:
        200:
          description: "OK"
  /posts/{id}/like:
    post:
      summary: "like a post"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
      responses:
        200:
          description: "OK"

  /posts/{id}/unlike:
    post:   
      summary: "unlike a post"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
      responses:
        200:
          description: "OK"

  /posts/{id}/comments:
    get:
      summary: "get a post's comments"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: './components/commentNode.yaml'
    post:
      summary: "write a new comment for a post"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
        - in: query
          required: true
          name: parent_comment_id
          schema:
            type: string
      requestBody: 
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id: 
                  type: string
                text: 
                  type: string
                time: 
                  type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment_id:
                    type: string
    put:
      summary: "update a comment for a post"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
        - in: query
          required: true
          name: comment_id
          schema:
            type: string
      requestBody: 
        content:
          application/json:
            schema:
              type: object
              properties:
                text: 
                  type: string
                time: 
                  type: string
      responses:
        200:
          description: "OK"
  /posts/{id}/save:
    post:
      summary: "save a post"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
      responses:
        200:
          description: "OK"
  /posts/{id}/unsave:
    post:
      summary: "unsave a post"
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: string
      responses:
        200:
          description: "OK"